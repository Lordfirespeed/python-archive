from solution import FigureSkating
import unittest


class FigureSkatingTests(unittest.TestCase):

    def test1(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["1.25,-5,2.5,8.5,6.25,0.25,10", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "2,-5,2.25,8.25,6.0,0.5,9.5"],
            [5, 4.25, 2]), 35)

    def test2(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["-5.5,1.5,-0.75,-1.5,3.75,1.5,8.0,4.5,5.0", "-4.5,2.5,-1.25,-2.75,3.25,1.75,9.25,3.75,7.75",
             "-3.75,-0.25,0.25,-4.0,5.25,0.25,8.5,3.0,6.0", "-5.0,0.75,-0.75,0.0,3.75,1.5,10.0,2.25,6.0",
             "-4.5,1.25,-2.0,-1.0,5.75,0.25,10.0,4.5,10.25"], [7.25, 4.75, 5.25, 4, 1.25]), 40.3333)

    def test3(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards([], [5, 4.25, 2]), 31.25)

    def test4(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1.25,-5,2.5,8.5,6.25,0.25", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5,5"], [5, 4.5, 2]), 31.5)

    def test5(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["-5.0,1.5,-0.75,-1.5,3.75,1.5,8.0,4.5,5.0",
             "-4.5,2.5,-1.25,-2.75,3.25,1.75,9.25,3.75,7.75",
             "-3.75,-0.25,0.25,-4.0,4.25,0.25,8.5,3.0,6.0",
             "-5.0,0.75,-0.75,0.0,3.75,1.5,10.0,2.25,6.0",
             "-4.5,1.25,-2.0,-1.0,4.75,0.25,10.0,4.5,8.0"], [7.25, 4.75, 5.25, 4, 1.25]), 40.9167)

    def test6(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["1.25,0.0,-1.5,-0.5,-2.0,-3.0,-1.5,-4.5,3.0,0.5,0.75,2.0,9.0,1.25", "2.25,-0.5,1.0,0.0,-2.0,-0.25,-1.5,-1.25,3.0,1.5,2.5,3.0,9.25,0.5", "1.75,0.5,-1.75,0.25,-2.25,0.0,-0.5,-1.5,3.0,1.75,1.5,3.75,9.75,1.5", "3.0,0.5,-0.75,0.25,0.75,-2.25,-2.25,-3.5,3.0,0.75,1.25,3.5,9.0,1.75", "0.25,-1.0,-1.0,0.5,-1.75,-1.75,-2.5,-2.25,4.5,1.0,1.25,3.25,8.5,0.25", "4.0,-1.25,-1.75,2.0,-1.0,0.0,-2.0,-2.75,3.25,2.25,0.5,2.0,7.25,2.0", "1.75,1.0,-2.0,0.75,0.0,-1.25,-3.0,-2.0,2.25,3.25,1.0,2.75,9.75,0.75", "1.75,0.75,-2.25,0.0,-1.5,-0.5,-1.75,-1.5,3.5,0.0,0.25,1.5,8.5,1.0", "1.75,-0.25,-3.0,1.0,0.0,-0.75,-1.0,-3.0,3.75,-0.5,0.25,3.0,9.0,0.75"],
            [4.25, 4.25, 4, 6.25, 7.25, 7.75, 9, 7, 8, 3.25]), 73.5714)

    def test7(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["1.2,-5.1,2.54,8.9,6.15,0.35,10.1", "2.41,-4.63,1.92,7.78,6.59,0.7,9.53", "2.1,-5.1,2.15,8.35,6.1,0.58,9.45"],
            [5, 4.25, 2]), 35.0)

    def test8(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["1.25,0.0,-1.5,-0.5,-2.0,-3.0,-1.5,-4.5,3.0,0.5,0.75,2.0,9.0,1.25", "2.25,-0.5,1.0,0.0,-2.0,-0.25,-1.5,-1.25,3.0,1.5,2.5,3.0,9.25", "1.75,0.5,-1.75,0.25,-2.25,0.0,-0.5,-1.5,3.0,1.75,1.5,3.75,9.75,1.5", "3.0,0.5,-0.75,0.25,0.75,-2.25,-2.25,-3.5,3.0,0.75,1.25,3.5,9.0,1.75", "0.25,-1.0,-1.0,0.5,-1.75,-1.75,-2.5,-2.25,4.5,1.0,1.25,3.25,8.5,0.25", "4.0,-1.25,-1.75,2.0,-1.0,0.0,-2.0,-2.75,3.25,2.25,0.5,2.0,7.25,2.0", "1.75,1.0,-2.0,0.75,0.0,-1.25,-3.0,-2.0,2.25,3.25,1.0,2.75,9.75,0.75", "1.75,0.75,-2.25,0.0,-1.5,-0.5,-1.75,-1.5,3.5,0.0,0.25,1.5,8.5,1.0,0.5", "1.75,-0.25,-3.0,1.0,0.0,-0.75,-1.0,-3.0,3.75,-0.5,0.25,3.0,9.0,0.75"],
            [4.25, 4.25, 4, 6.25, 7.25, 7.75, 9, 7, 8, 3.25]), 73.65)

    def test9(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["-5.5,1.5,-0.75,-1.5,3.75,1.5,0.15,4.5,5.0", "-4.5,2.5,-5.2,-2.75,3.25,1.75,9.25,3.75,10.1", "-3.75,-0.25,0.25,-4.0,5.25,0.25,8.5,3.0,6.0", "-5.2,0.75,-0.75,0.0,3.75,1.5,10.0,2.25,6.0", "-4.5,1.25,-5.1,-1.0,5.75,0.25,10.0,4.5,10.25"],
            [7.25, 4.75, 5.25, 4, 1.25]), 40.5)

    def test10(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["5.25,-5.1,2.5,10.5,6.25,0.25,10", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "2,-5.1,2.25,8.25,6.0,0.5,9.5"],
            [5, 4.25, 2]), 35.0)

    def test11(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["1.25,-5,2.5,8.5,6.25,0.25,10", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5"],
            [5, 4.25, 2]), 35.125)

    def test12(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["1.25,-5,2.5,8.5,6.25,0.25,10", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5,5", "2,-5,2.25,8.25,6.0,0.5,9.5"],
            [5, 4.25, 2]), 34.875)


class ChrisFigureSkatingTests(unittest.TestCase):

    def test1(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(
            ["-2.86,-4.06,1.79,-3.24,-4.74,-0.37,4.47,2.09,3.93,0",
             "5.07,-0.93,5.5,-5.89,-4.19,-4.44,9.18,-0.89,4.83,0",
             "4.89,5.37,2.3,0.65,3.6,-4.01,8.39,7.02,4.25,0",
             "-2.69,1.53,3.96,-0.65,1.86,5.42,9,5.35,4.33,0",
             "3.54,5.35,3.18,-0.3,2.58,4.84,10.72,9.42,1.69,5.74,2.26",
             "-3.46,2.11,2.66,3.88,-3.96,4.71,8.43,9.14,6.21",
             "1.75,-3.02,-1.87,-1.16,2.37,-3.2,1.35,5.08,0.2,0",
             "5.63,3.53,-5.11,5.33,-2.25,-2.49,1.41,9.4,1.8,0"], [4.25, 6.5, 7.75, 2, 3.75, 5]), 45.8125)

    def test2(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1.25,-5,2.5,8.5,6.25,0.25,10", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "2,-5,2.25,8.25,6.0,0.5,9.5"], [5, 4.25, 2]), 35)

    def test3(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["-5.5,1.5,-0.75,-1.5,3.75,1.5,8.0,4.5,5.0", "-4.5,2.5,-1.25,-2.75,3.25,1.75,9.25,3.75,7.75", "-3.75,-0.25,0.25,-4.0,5.25,0.25,8.5,3.0,6.0", "-5.0,0.75,-0.75,0.0,3.75,1.5,10.0,2.25,6.0", "-4.5,1.25,-2.0,-1.0,5.75,0.25,10.0,4.5,10.25"], [7.25, 4.75, 5.25, 4, 1.25]), 40.3333)

    def test4(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1,1,1,1,1", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "1,1,1,1,1"], [5]), 10)

    def test5(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1,1,1,1,1", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "2,2,2,2,2", "3,3,3,3,3"], [5]), 15)

    def test6(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1.1,1.1,1.1,1.1,1.1", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "1,1,1,1,1"], [5]), 10)

    def test7(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1,1,1,1,1", "2.5,-4.75,1.75,7.75,6.5,0.75,9.5", "1.9,1.9,1.9,1.9,1.9", "3,3,3,3,3"], [5]), 15)

    def test8(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["1,0,0,0,0", "1,0,0,0,0"], [5]), 26)

    def test9(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards(["0,0,0,0,0", "0,0,0,0,0"], [1]), 21)

    def test10(self):
        solution = FigureSkating()
        self.assertEqual(solution.evaluate_score_cards([], [5, 4.25, 2]), 31.25)


if __name__ == "__main__":
    unittest.main()
